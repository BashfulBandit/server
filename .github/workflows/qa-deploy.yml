name: QA Deploy

on:
  push:
    branches:
      - 'rc'
  workflow_dispatch:
    inputs: 
      migrateDb:
        required: true
        default: "true"
      resetDb:
        required: true
        default: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Api
            base_path: .
          - name: Admin
            base_path: .
            gulp: true
          - name: Billing
            base_path: .
          - name: Events
            base_path: .
          - name: Notifications
            base_path: .
          - name: Sso
            base_path: ./bitwarden_license
            gulp: true
          - name: Portal
            base_path: ./bitwarden_license
            gulp: true
          - name: Identity
            base_path: .
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Print Environment
        run: |
          dotnet --info
          node --version
          npm --version
          gulp --version

      - name: load env vars
        run: |
          echo "Base Path: ${BASE_PATH}"
          echo "Name: ${NAME}"
        env:
          BASE_PATH: ${{ matrix.base_path }}
          NAME: ${{ matrix.name }}

      - name: Build Service
        run: |
          work_dir=$(pwd)
          dir=$BASE_PATH/src/$SERVICE_NAME

          cd $dir
          echo "Restore"
          dotnet restore $SERVICE_NAME.csproj
          echo "Clean"
          dotnet clean $SERVICE_NAME.csproj -c "Release" -o obj/Azure/publish

          if [ "$GULP" == "true" ]; then
            npm install
            npm install gulp
            gulp --gulpfile gulpfile.js build
          fi

          echo "Publish"
          dotnet publish $SERVICE_NAME.csproj -c "Release" -o obj/Azure/publish

          cd obj/Azure/publish
          zip -r $SERVICE_NAME.zip .
          mv $SERVICE_NAME.zip ../../../
        env:
          SERVICE_NAME: ${{ matrix.name }}
          BASE_PATH: ${{ matrix.base_path }}
          GULP: ${{ matrix.gulp }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.SERVICE_NAME }}.zip
          path: ${{ env.BASE_PATH }}/src/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}.zip
        env:
          BASE_PATH: ${{ matrix.base_path }}
          SERVICE_NAME: ${{ matrix.name }}

      - name: Test build dir
        run: ls $BASE_PATH/src/$SERVICE_NAME
        env:
          SERVICE_NAME: ${{ matrix.name }}
          BASE_PATH: ${{ matrix.base_path }}


  reset-db:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Reset Test Data - Stub
        if: ${{ github.events.inputs.resetDb }} == "true"
        run: |
          echo "placeholder for cleaning DB"
          echo "placeholder for loading test dataset"

  update-db:
    if: ${{ github.events.inputs.migrateDb }} == "true"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: migrate db
        if: ${{ github.events.inputs.resetDb }} == "true"
        run: |
          echo "placeholder for updateing DB"


  deploy:
    runs-on: ubuntu-latest
    needs: 
      - reset-db
      - update-db
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Api
            name_lower: api
          - name: Admin
            name_lower: admin
          - name: Billing
            name_lower: billing
          - name: Events
            name_lower: events
          - name: Sso
            name_lower: sso
          - name: Portal
            name_lower: portal
          - name: Identity
            name_lower: identity
    steps:
      - name: Checkout custom AZ KV action
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
        with:
          repository: joseph-flinn/get-keyvault-secrets
          ref: 07b54e7df161105193fb62e3b594e496377f2e84
          path: ./.github/actions/get-keyvault-secrets

      - name: Download aritifacts
        uses: actions/download-artifact@158ca71f7c614ae705e79f25522ef4658df18253
        with:
          name: ${{ matrix.name }}.zip

      - name: Login to Azure
        uses: Azure/login@77f1b2e3fb80c0e8645114159d17008b8a2e475a
        with:
          creds: ${{ secrets.AZURE_QA_KV_CREDENTIALS }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: ./.github/actions/get-keyvault-secrets
        with:
          keyvault: "bitwarden-qa-kv"
          secrets: "subscription-id,
                    appservices-${{ matrix.name_lower }}-webapp-name:webapp-name"

      - name: Get Publish Profile
        run: |
          echo 'WEBAPP_PUBLISHING_PROFILE=$(az webapp deployment list-publishing-profiles --name ${{ steps.retrieve-secrets.output.webapp-name }} --slot staging --resource-group "bitwarden-qa" --subscription ${{ steps.retrieve-secrets.output.webapp-name }})' >> $GITHUB_ENV

          echo "::add-mask::$WEBAPP_PUBLISHING_PROFILE"
          echo "::set-output name=publish-profile::$WEBAPP_PUBLISHING_PROFILE"


      #- name: Get Publish Profile
      #  id: get-pp
      #  uses: aliencube/publish-profile-actions@0689f99a0d742938bbe312db9e366e8716cb0855
      #  with:
      #    resourceGroupName: "bitwarden-qa"
      #    appName: ${{ steps.retrieve-secrets.outputs.webapp-name }}/staging
      #  env:
      #    AZURE_CREDENTIALS: ${{ secrets.AZURE_QA_KV_CREDENTIALS }}

      - name: Deploy App
        uses: azure/webapps-deploy@798e43877120eda6a2a690a4f212c545e586ae31
        with:
          app-name: ${{ steps.retrieve-secrets.outputs.webapp-name }} 
          slot-name: "staging"
          publish-profile: ${{ steps.get-pp.outputs.profile}} 
          package: ./${{ matrix.name }}.zip

      #- name: Reset Publish Profile
      #  uses: aliencube/publish-profile-actions@0689f99a0d742938bbe312db9e366e8716cb0855
      #  with:
      #    resourceGroupName: "bitwarden-qa"
      #    appName: ${{ steps.retrieve-secrets.outputs.webapp-name }}/staging
      #    reset: true
      #  env:
      #    AZURE_CREDENTIALS: ${{ secrets.AZURE_QA_KV_CREDENTIALS }}
